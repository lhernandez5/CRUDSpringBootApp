{"version":3,"sources":["ClientEdit.js","AppNavbar.js","ClientList.js","Home.js","App.js","index.js"],"names":["ClientEdit","id","useParams","history","useNavigate","item","setItem","useState","name","email","useEffect","fetch","concat","then","response","json","data","catch","error","console","log","handleChange","e","value","target","prevItem","[object Object]","React","createElement","Fragment","Form","onSubmit","preventDefault","clientId","apiURl","method","headers","Content-Type","body","JSON","stringify","FormGroup","Label","for","Input","type","onChange","autoComplete","Button","color","AppNavbar","isOpen","setIsOpen","Navbar","dark","expand","NavbarBrand","tag","Link","to","onClick","toggle","ClientList","clients","setClients","Container","fluid","Table","className","width","map","client","key","style","whiteSpace","ButtonGroup","size","Accept","ok","prevClients","filter","remove","Home","App","Router","Routes","Route","path","exact","element","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.e3ee1a4a.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, FormGroup, Form, Input, Label } from \"reactstrap\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nconst ClientEdit = () => {\n  const { id } = useParams();\n  const history = useNavigate();\n  const [item, setItem] = useState({\n    name: \"\",\n    email: \"\",\n  });\n\n  useEffect(() => {\n    const clientId = id;\n    if (clientId) {\n      fetch(`/clients/${clientId}`)\n        .then((response) => response.json())\n        .then((data) => setItem(data))\n        .catch((error) => console.log(\"Error fetching client data:\", error));\n    }\n  }, [id]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setItem((prevItem) => ({\n      ...prevItem,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const clientId = id;\n    const apiURl = clientId ? `/clients/${clientId}` : \"/clients\";\n    const httpMethod = clientId ? \"PUT\" : \"POST\";\n\n    fetch(apiURl, {\n      method: httpMethod,\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(item),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Client saved successfully:\", data);\n        history(\"/clients\");\n      })\n      .catch((error) => console.error(\"Error saving client:\", error));\n  };\n\n  return (\n    <>\n      <div>\n        <Form onSubmit={handleSubmit}>\n          <FormGroup>\n            <Label for=\"name\">Name</Label>\n            <Input\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              value={item.name || \"\"}\n              onChange={handleChange}\n              autoComplete=\"name\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"email\">Email</Label>\n            <Input\n              type=\"text\"\n              name=\"email\"\n              id=\"email\"\n              value={item.email || \"\"}\n              onChange={handleChange}\n              autoComplete=\"email\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <Button color=\"primary\" type=\"submit\">\n              Save\n            </Button>\n            <Button color=\"secondary\">Cancel</Button>\n          </FormGroup>\n        </Form>\n      </div>\n    </>\n  );\n};\nexport default ClientEdit;\n","import React, { useState } from \"react\";\nimport { Navbar, NavbarBrand } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\nconst AppNavbar = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const toggle = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <Navbar color=\"dark\" dark expand=\"md\">\n      <NavbarBrand tag={Link} to=\"/\" onClick={toggle}>\n        Home\n      </NavbarBrand>\n    </Navbar>\n  );\n};\n\nexport default AppNavbar;\n","import React, { useState, useEffect } from \"react\";\nimport { Button, ButtonGroup, Container, Table } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport AppNavbar from \"./AppNavbar\";\n\nfunction ClientList() {\n  const [clients, setClients] = useState([]);\n\n  useEffect(() => {\n    fetch(\"/clients/all\")\n      .then((response) => response.json())\n      .then((data) => setClients(data));\n  }, []); // Empty dependency array means this effect runs once after the initial render\n\n  const remove = (clientId) => {\n    fetch(`/clients/${clientId}`, {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        if (response.ok) {\n          setClients((prevClients) =>\n            prevClients.filter((client) => client.id !== clientId)\n          );\n        } else {\n          console.error(\"Failed to delete client\");\n        }\n      })\n      .catch((error) => console.error(\"Error: \", error));\n  };\n\n  return (\n    <div>\n      <AppNavbar />\n      <Container fluid>\n        <h3>Clients</h3>\n        <Table className=\"mt-4\">\n          <thead>\n            <tr>\n              <th width=\"30%\">Name</th>\n              <th width=\"30%\">Email</th>\n              <th width=\"40%\">Actions</th>\n            </tr>\n          </thead>\n          {clients.map((client) => (\n            <tr key={client.id}>\n              <td style={{ whiteSpace: \"nowrap\" }}>{client.name}</td>\n              <td>{client.email}</td>\n              <td>\n                <ButtonGroup>\n                  <Button\n                    size=\"sm\"\n                    color=\"primary\"\n                    tag={Link}\n                    to={\"/clients/\" + client.id}\n                  >\n                    Edit\n                  </Button>\n                  <Button\n                    size=\"sm\"\n                    color=\"danger\"\n                    onClick={() => remove(client.id)}\n                  >\n                    Delete\n                  </Button>\n                </ButtonGroup>\n              </td>\n              <td></td>\n            </tr>\n          ))}\n        </Table>\n        <div className=\"float-right\">\n          <Button color=\"success\" tag={Link} to={\"/clients/new\"}>\n            Add Client\n          </Button>\n        </div>\n      </Container>\n    </div>\n  );\n}\nexport default ClientList;\n","import React from \"react\";\nimport \"./App.css\";\nimport AppNavbar from \"./AppNavbar\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Container } from \"reactstrap\";\n\nfunction Home() {\n  return (\n    <div>\n      <AppNavbar />\n      <Container fluid>\n        <Button color=\"link\">\n          <Link to=\"/clients\">Clients</Link>\n        </Button>\n      </Container>\n    </div>\n  );\n}\nexport default Home;\n","import React from \"react\";\nimport \"./App.css\";\nimport ClientEdit from \"./ClientEdit\";\nimport ClientList from \"./ClientList\";\nimport Home from \"./Home\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" exact={true} element={<Home />} />\n        <Route path=\"/clients\" exact={true} element={<ClientList />} />\n        <Route path=\"/clients/:id\" element={<ClientEdit />} />\n        <Route path=\"/clients/new\" element={<ClientEdit />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}